ema_mkl <- majority_voting_df(ema_mkl_df, 'ema_mkl')
ema_stack <- majority_voting_df(ema_stack_df, 'ema_stack')
table(ema_log$ema_log_cases)
table(ema_interview_log$ema_log_cases)
ema_log <- majority_voting_df(ema_log_df, 'ema_log')
ema_interview_log <- majority_voting_df(ema_interview_log_df, 'ema_interview_log')
ema_mkl <- majority_voting_df(ema_mkl_df, 'ema_mkl')
ema_stack <- majority_voting_df(ema_stack_df, 'ema_stack')
table(ema_interview_log$ema_log_cases)
table(ema_interview_log$ema_interview_log_cases)
table(ema_interview_log$true_label)
ema_interview_log %>% filter(cases == 'TP')%>%nrow() / (ema_interview_log %>% filter(cases %in% c('TP', 'FN'))%>% nrow())
ema_interview_log %>% filter(ema_interview_log_cases == 'TP')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_interview_log %>% filter(ema_interview_log_cases == 'TN')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TN', 'FP'))%>% nrow())
specificity
BAC <- (sensitivity + specificity) / 2
BAC
sensitivity
sensitivity <- ema_interview_log %>% filter(ema_interview_log_cases == 'TP')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TP', 'FN'))%>% nrow())
sensitivity
specificity <- ema_interview_log %>% filter(ema_interview_log_cases == 'TN')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TN', 'FP'))%>% nrow())
specificity
sensitivity
specificity
BAC <- (sensitivity + specificity) / 2
BAC
sensitivity <- ema_log %>% filter(ema_log_cases == 'TP')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_log %>% filter(ema_log_cases == 'TN')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
BAC
ema_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_video_open_with_interview/unimodal_splits/video_open/SAGA_log_elastic_predictions.csv')
ema_log <- majority_voting_df(ema_log_df, 'ema_log')
table(ema_log$ema_log_cases)
table(ema_interview_log$ema_interview_log_cases)
table(ema_log$ema_log_cases)
sensitivity <- ema_log %>% filter(ema_log_cases == 'TP')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_log %>% filter(ema_log_cases == 'TN')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
BAC
ema_mkl_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_smartphone_active_EMA_with_interview/MKL_predictions.csv')
ema_stack_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_smartphone_active_EMA_with_interview/MM-Stacking_predictions.csv')
ema_interview_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_smartphone_active_EMA_with_interview/unimodal_splits/interview/SAGA_log_elastic_predictions.csv')
ema_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_smartphone_active_EMA_with_interview/unimodal_splits/smartphone_active_EMA/SAGA_log_elastic_predictions.csv')
majority_voting_df <- function(df, name_domain){
df%>%
group_by(subjid) %>%
summarise(
true_label = first(labels),
!!paste0(name_domain, "_majority_prediction") := as.integer(names(sort(table(prediction), decreasing = TRUE)[1])),
!!paste0(name_domain, "_mean_continuous_prediction") := mean(continuous_prediction),
.groups = "drop"
)%>%
mutate(!!paste0(name_domain, "_cases") := case_when(true_label == 1 & get(paste0(name_domain, '_majority_prediction')) == 1 ~ 'TP',
true_label == -1 & get(paste0(name_domain, '_majority_prediction')) == -1 ~ 'TN',
true_label == 1 & get(paste0(name_domain, '_majority_prediction')) == -1 ~ 'FN',
true_label == -1 & get(paste0(name_domain, '_majority_prediction')) == 1 ~ 'FP')
}
majority_voting_df <- function(df, name_domain){
df%>%
group_by(subjid) %>%
summarise(
true_label = first(labels),
!!paste0(name_domain, "_majority_prediction") := as.integer(names(sort(table(prediction), decreasing = TRUE)[1])),
!!paste0(name_domain, "_mean_continuous_prediction") := mean(continuous_prediction),
.groups = "drop"
)%>%
mutate(!!paste0(name_domain, "_cases") := case_when(true_label == 1 & get(paste0(name_domain, '_majority_prediction')) == 1 ~ 'TP',
true_label == -1 & get(paste0(name_domain, '_majority_prediction')) == -1 ~ 'TN',
true_label == 1 & get(paste0(name_domain, '_majority_prediction')) == -1 ~ 'FN',
true_label == -1 & get(paste0(name_domain, '_majority_prediction')) == 1 ~ 'FP'))
}
ema_log <- majority_voting_df(ema_log_df, 'ema_log')
ema_interview_log <- majority_voting_df(ema_interview_log_df, 'ema_interview_log')
ema_mkl <- majority_voting_df(ema_mkl_df, 'ema_mkl')
ema_stack <- majority_voting_df(ema_stack_df, 'ema_stack')
table(ema_log$ema_log_cases)
table(ema_interview_log$ema_interview_log_cases)
table(ema_log$ema_log_cases)
table(ema_interview_log$true_label)
sensitivity <- TP / (TP + FN)
BAC
sensitivity <- TP / (TP + FN)
sensitivity <- ema_interview_log %>% filter(ema_interview_log_cases == 'TP')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_interview_log %>% filter(ema_interview_log_cases == 'TN')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
BAC
sensitivity
specificity
sensitivity <- ema_log %>% filter(ema_log_cases == 'TP')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_log %>% filter(ema_log_cases == 'TN')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
BAC
sensitivity <- ema_mkl %>% filter(ema_mkl_cases == 'TP')%>%nrow() / (ema_mkl %>% filter(ema_mkl_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_mkl %>% filter(ema_mkl_cases == 'TN')%>%nrow() / (ema_mkl %>% filter(ema_mkl_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
BAC
head(ema_log)
test <- ema_interview_log %>%
left_join(., ema_log, by = c('subjid', 'true_label'))%>%
left_join(., ema_mkl)
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_interview_log_cases))+
geom_bar(position = 'dodge')+
facet_wrap(.~ema_mkl)
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_interview_log_cases))+
geom_bar(position = 'dodge')+
facet_wrap(.~ema_mkl_cases)
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_interview_log_cases))+
geom_bar(position = 'dodge')+
facet_wrap(.~ema_mkl_cases)+
theme_bw(base_size = 25)
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_interview_log_cases))+
geom_bar(position = 'dodge')+
facet_wrap(.~ema_mkl_cases)+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_interview_log_cases))+
geom_bar(position = 'dodge')+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_interview_log_cases))+
geom_bar(position = 'dodge')+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('Interview vs. EMA')
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_interview_log_cases))+
geom_bar(position = 'dodge')+
facet_wrap(.~ema_mkl_cases)+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('Interview vs. EMA vs. MKL')
test %>%
ggplot(aes(x = ema_interview_log_cases, fill = ema_mkl_cases))+
geom_bar(position = 'dodge')+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('Interview vs. MKL')
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_mkl_cases))+
geom_bar(position = 'dodge')+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('EMA vs. MKL')
test %>%
ggplot(aes(x = ema_interview_log_cases, fill = ema_mkl_cases))+
geom_bar(position = 'dodge')+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('Interview vs. MKL')
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_mkl_cases))+
geom_bar(position = 'dodge')+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('EMA vs. MKL')
aux <- read.csv('~/Dropbox (Partners HealthCare)/ampscz_data_sharing/mkl/nda3_extradata/auxiliaries_nda3_V1.csv')
head(aux)
aux <- read.csv('~/Dropbox (Partners HealthCare)/ampscz_data_sharing/mkl/nda3_extradata/auxiliaries_nda3_V1.csv')%>%
dplyr::rename(subjid = src_subject_id)
test_aux <- test %>%
left_join(., aux, by = 'subjid')
table_sex <- table(test_aux$ema_interview_log_cases, test_aux$sex)
table_sex
chisq.test(table_sex)
majority_voting_df <- function(df, name_domain){
df%>%
group_by(subjid) %>%
summarise(
true_label = first(labels),
!!paste0(name_domain, "_majority_prediction") := as.integer(names(sort(table(prediction), decreasing = TRUE)[1])),
!!paste0(name_domain, "_mean_continuous_prediction") := mean(continuous_prediction),
.groups = "drop"
)%>%
mutate(!!paste0(name_domain, "_cases") := case_when(true_label == 1 & get(paste0(name_domain, '_majority_prediction')) == 1 ~ 'TP',
true_label == -1 & get(paste0(name_domain, '_majority_prediction')) == -1 ~ 'TN',
true_label == 1 & get(paste0(name_domain, '_majority_prediction')) == -1 ~ 'FN',
true_label == -1 & get(paste0(name_domain, '_majority_prediction')) == 1 ~ 'FP'))%>%
mutate(!!paste0(name_domain, "_miss_hit") := case_when(get(paste0(name_domain, "_cases")) %in% c('TP', 'TN') ~ 'hit',
TRUE ~ 'miss'))
}
ema_log <- majority_voting_df(ema_log_df, 'ema_log')
ema_interview_log <- majority_voting_df(ema_interview_log_df, 'ema_interview_log')
ema_mkl <- majority_voting_df(ema_mkl_df, 'ema_mkl')
ema_stack <- majority_voting_df(ema_stack_df, 'ema_stack')
table(ema_log$ema_log_cases)
table(ema_interview_log$ema_interview_log_cases)
table(ema_log$ema_log_cases)
table(ema_interview_log$true_label)
# Calculate BAC
# sensitivity <- TP / (TP + FN)
# specificity <- TN / (TN + FP)
# BAC <- (sensitivity + specificity) / 2
sensitivity <- ema_interview_log %>% filter(ema_interview_log_cases == 'TP')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_interview_log %>% filter(ema_interview_log_cases == 'TN')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
sensitivity <- ema_log %>% filter(ema_log_cases == 'TP')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_log %>% filter(ema_log_cases == 'TN')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
sensitivity <- ema_mkl %>% filter(ema_mkl_cases == 'TP')%>%nrow() / (ema_mkl %>% filter(ema_mkl_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_mkl %>% filter(ema_mkl_cases == 'TN')%>%nrow() / (ema_mkl %>% filter(ema_mkl_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
test <- ema_interview_log %>%
left_join(., ema_log, by = c('subjid', 'true_label'))%>%
left_join(., ema_mkl)
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_interview_log_cases))+
geom_bar(position = 'dodge')+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('Interview vs. EMA')
test %>%
ggplot(aes(x = ema_interview_log_cases, fill = ema_mkl_cases))+
geom_bar(position = 'dodge')+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('Interview vs. MKL')
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_mkl_cases))+
geom_bar(position = 'dodge')+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('EMA vs. MKL')
test %>%
ggplot(aes(x = ema_log_cases, fill = ema_interview_log_cases))+
geom_bar(position = 'dodge')+
facet_wrap(.~ema_mkl_cases)+
theme_bw(base_size = 20)+
theme(legend.position = 'bottom')+
ggtitle('Interview (color) vs. EMA (x-axis) vs. MKL (facets)')
aux <- read.csv('~/Dropbox (Partners HealthCare)/ampscz_data_sharing/mkl/nda3_extradata/auxiliaries_nda3_V1.csv')%>%
dplyr::rename(subjid = src_subject_id)
test_aux <- test %>%
left_join(., aux, by = 'subjid')
table_sex <- table(test_aux$ema_interview_log_miss_hit, test_aux$sex)
table_sex
chisq.test(table_sex)
t.test(age ~ ema_interview_log_miss_hit, data = test_aux)
t.test(interview_age ~ ema_interview_log_miss_hit, data = test_aux)
dwi_mkl_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/MKL_predictions.csv')
dwi_mkl_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/MKL_predictions.csv')
dwi_stack_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/MM-Stacking_predictions.csv')
dwi_interview_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/unimodal_splits/interview/SAGA_log_elastic_predictions.csv')
dwi_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/unimodal_splits/dwi/SAGA_log_elastic_predictions.csv')
dwi_log <- majority_voting_df(dwi_log_df, 'dwi_log')
dwi_interview_log <- majority_voting_df(dwi_interview_log_df, 'dwi_interview_log')
dwi_mkl <- majority_voting_df(dwi_mkl_df, 'dwi_mkl')
dwi_stack <- majority_voting_df(dwi_stack_df, 'dwi_stack')
table(dwi_log$dwi_log_cases)
table(dwi_interview_log$dwi_interview_log_cases)
table(dwi_log$dwi_log_cases)
table(dwi_interview_log$true_label)
sensitivity <- dwi_interview_log %>% filter(dwi_interview_log_cases == 'TP')%>%nrow() / (dwi_interview_log %>% filter(dwi_interview_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- dwi_interview_log %>% filter(dwi_interview_log_cases == 'TN')%>%nrow() / (dwi_interview_log %>% filter(dwi_interview_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
BAC
sensitivity
specificity
sensitivity <- dwi_log %>% filter(dwi_log_cases == 'TP')%>%nrow() / (dwi_log %>% filter(dwi_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- dwi_log %>% filter(dwi_log_cases == 'TN')%>%nrow() / (dwi_log %>% filter(dwi_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
sensitivity
specificity
BAC
table(dwi_interview_log$true_label)
sensitivity <- dwi_mkl %>% filter(dwi_mkl_cases == 'TP')%>%nrow() / (dwi_mkl %>% filter(dwi_mkl_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- dwi_mkl %>% filter(dwi_mkl_cases == 'TN')%>%nrow() / (dwi_mkl %>% filter(dwi_mkl_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
sensitivity
specificity
BAC
sensitivity
specificity
dwi_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/unimodal_splits/dwi/SAGA_log_elastic_predictions.csv')
dwi_log <- majority_voting_df(dwi_log_df, 'dwi_log')
dwi_log
dwi_interview_log <- majority_voting_df(dwi_interview_log_df, 'dwi_interview_log')
dwi_interview_log
dwi_mkl <- majority_voting_df(dwi_mkl_df, 'dwi_mkl')
dwi_stack <- majority_voting_df(dwi_stack_df, 'dwi_stack')
table(dwi_log$dwi_log_cases)
table(dwi_interview_log$dwi_interview_log_cases)
table(dwi_log$dwi_log_cases)
table(dwi_interview_log$true_label)
# Calculate BAC
# sensitivity <- TP / (TP + FN)
# specificity <- TN / (TN + FP)
# BAC <- (sensitivity + specificity) / 2
sensitivity <- dwi_interview_log %>% filter(dwi_interview_log_cases == 'TP')%>%nrow() / (dwi_interview_log %>% filter(dwi_interview_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- dwi_interview_log %>% filter(dwi_interview_log_cases == 'TN')%>%nrow() / (dwi_interview_log %>% filter(dwi_interview_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
BAC
specificity
sensitivity
sensitivity <- dwi_log %>% filter(dwi_log_cases == 'TP')%>%nrow() / (dwi_log %>% filter(dwi_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- dwi_log %>% filter(dwi_log_cases == 'TN')%>%nrow() / (dwi_log %>% filter(dwi_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
BAC
specificity
sensitivity
sensitivity <- dwi_mkl %>% filter(dwi_mkl_cases == 'TP')%>%nrow() / (dwi_mkl %>% filter(dwi_mkl_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- dwi_mkl %>% filter(dwi_mkl_cases == 'TN')%>%nrow() / (dwi_mkl %>% filter(dwi_mkl_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
sensitivity
specificity
BAC
test <- dwi_interview_log %>%
left_join(., dwi_log, by = c('subjid', 'true_label'))%>%
left_join(., dwi_mkl)
test
test <- dwi_interview_log %>%
left_join(., dwi_log, by = c('subjid', 'true_label'))%>%
left_join(., dwi_mkl)
test_aux <- test %>%
left_join(., aux, by = 'subjid')
table_sex <- table(test_aux$dwi_log_miss_hit, test_aux$sex)
chisq.test(table_sex)
t.test(interview_age ~ dwi_log_miss_hit, data = test_aux)
table_site <- table(test_aux$dwi_log_miss_hit, test_aux$site)
chisq.test(table_site)
test %>% head()
test %>%
ggplot(aes(x = dwi_log_mean_continuous_prediction, y = interview_age))+
geom_boxplot()
head(test)
test_aux %>%
ggplot(aes(x = dwi_log_mean_continuous_prediction, y = interview_age))+
geom_boxplot()
test_aux %>%
ggplot(aes(x = dwi_log_mean_continuous_prediction, y = interview_age))+
geom_smooth()
test_aux %>%
ggplot(aes(x = dwi_log_mean_continuous_prediction, y = interview_age))+
geom_smooth(method = 'lm')
test_aux %>%
ggplot(aes(x = dwi_log_mean_continuous_prediction, y = interview_age))+
geom_smooth(method = 'lm')+
geom_point()
cor.test(test_aux$dwi_log_mean_continuous_prediction, test_aux$interview_age)
test_aux$dwi_log_miss_hit
test_aux %>%
filter(dwi_log_miss_hit %in% 'miss')%>%
ggplot(aes(x = dwi_log_mean_continuous_prediction, y = interview_age))+
geom_smooth(method = 'lm')+
geom_point()
miss <- test_aux %>%
filter(dwi_log_miss_hit %in% 'miss')
cor.test(miss$dwi_log_mean_continuous_prediction, miss$interview_age)
ema_mkl_df %>% head()
ema_mkl_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_smartphone_active_EMA_with_interview/MKL_predictions.csv')
ema_stack_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_smartphone_active_EMA_with_interview/MM-Stacking_predictions.csv')
ema_interview_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_smartphone_active_EMA_with_interview/unimodal_splits/interview/SAGA_log_elastic_predictions.csv')
ema_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_smartphone_active_EMA_with_interview/unimodal_splits/smartphone_active_EMA/SAGA_log_elastic_predictions.csv')
dwi_mkl_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/MKL_predictions.csv')
dwi_stack_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/MM-Stacking_predictions.csv')
dwi_interview_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/unimodal_splits/interview/SAGA_log_elastic_predictions.csv')
dwi_log_df <- read.csv('~/Documents/Harvard/projects/prediction_ampscz/classification_modality_pairs_results/binary_m2_remission/multimodal_intersection_dwi_with_interview/unimodal_splits/dwi/SAGA_log_elastic_predictions.csv')
majority_voting_df <- function(df, name_domain){
df%>%
group_by(subjid) %>%
summarise(
true_label = first(labels),
!!paste0(name_domain, "_majority_prediction") := as.integer(names(sort(table(prediction), decreasing = TRUE)[1])),
!!paste0(name_domain, "_mean_continuous_prediction") := mean(continuous_prediction),
.groups = "drop"
)%>%
mutate(!!paste0(name_domain, "_cases") := case_when(true_label == 1 & get(paste0(name_domain, '_majority_prediction')) == 1 ~ 'TP',
true_label == -1 & get(paste0(name_domain, '_majority_prediction')) == -1 ~ 'TN',
true_label == 1 & get(paste0(name_domain, '_majority_prediction')) == -1 ~ 'FN',
true_label == -1 & get(paste0(name_domain, '_majority_prediction')) == 1 ~ 'FP'))%>%
mutate(!!paste0(name_domain, "_miss_hit") := case_when(get(paste0(name_domain, "_cases")) %in% c('TP', 'TN') ~ 'hit',
TRUE ~ 'miss'))
}
ema_log <- majority_voting_df(ema_log_df, 'ema_log')
ema_interview_log <- majority_voting_df(ema_interview_log_df, 'ema_interview_log')
ema_mkl <- majority_voting_df(ema_mkl_df, 'ema_mkl')
ema_stack <- majority_voting_df(ema_stack_df, 'ema_stack')
table(ema_log$ema_log_cases)
table(ema_interview_log$ema_interview_log_cases)
table(ema_log$ema_log_cases)
table(ema_interview_log$true_label)
# Calculate BAC
# sensitivity <- TP / (TP + FN)
# specificity <- TN / (TN + FP)
# BAC <- (sensitivity + specificity) / 2
sensitivity <- ema_interview_log %>% filter(ema_interview_log_cases == 'TP')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_interview_log %>% filter(ema_interview_log_cases == 'TN')%>%nrow() / (ema_interview_log %>% filter(ema_interview_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
BAC
sensitivity
specificity
table(ema_interview_log$true_label)
ema_interview_log %>% ggplot(aes(x = ema_interview_log_cases))+geom_bar()
ema_interview_log %>% ggplot(aes(x = ema_interview_log_cases))+geom_bar(base_size = 20)
ema_interview_log %>% ggplot(aes(x = ema_interview_log_cases))+geom_bar()+theme_bw(base_size = 20)
sensitivity <- ema_log %>% filter(ema_log_cases == 'TP')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_log %>% filter(ema_log_cases == 'TN')%>%nrow() / (ema_log %>% filter(ema_log_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
sensitivity
specificity
BAC
ema_log %>% ggplot(aes(x = ema_log_cases))+geom_bar(base_size = 20)
ema_log %>% ggplot(aes(x = ema_log_cases))+geom_bar()+theme_bw(base_size = 20)
sensitivity <- ema_mkl %>% filter(ema_mkl_cases == 'TP')%>%nrow() / (ema_mkl %>% filter(ema_mkl_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_mkl %>% filter(ema_mkl_cases == 'TN')%>%nrow() / (ema_mkl %>% filter(ema_mkl_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
sensitivity
specificity
BAC
ema_mkl %>% ggplot(aes(x = ema_mkl_cases))+geom_bar()+theme_bw(base_size = 20)
sensitivity <- ema_stack %>% filter(ema_stack_cases == 'TP')%>%nrow() / (ema_stack %>% filter(ema_stack_cases %in% c('TP', 'FN'))%>% nrow())
specificity <- ema_stack %>% filter(ema_stack_cases == 'TN')%>%nrow() / (ema_stack %>% filter(ema_stack_cases %in% c('TN', 'FP'))%>% nrow())
BAC <- (sensitivity + specificity) / 2
sensitivity
specificity
BAC
> ema_stack %>% ggplot(aes(x = ema_stack_cases))+geom_bar()+theme_bw(base_size = 20)
ema_stack %>% ggplot(aes(x = ema_stack_cases))+geom_bar()+theme_bw(base_size = 20)
test <- ema_interview_log %>%
left_join(., ema_log, by = c('subjid', 'true_label'))%>%
left_join(., ema_mkl)
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction))+geom_point()
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, fill = hit_miss))+geom_point()
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, fill = ema_mkl_miss_hit))+geom_point()
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, fill = as.factor(ema_mkl_miss_hit)))+geom_point()
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, color = as.factor(ema_mkl_miss_hit)))+geom_point()
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, color = as.factor(ema_mkl_miss_hit)))+geom_point(alpha = 0.6)
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, color = as.factor(ema_mkl_miss_hit)))+geom_point(alpha = 0.6, size = 3)
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, color = as.factor(ema_mkl_miss_hit)))+geom_point(alpha = 0.3, size = 3)
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, color = as.factor(ema_mkl_miss_hit)))+geom_point(alpha = 0.3, size = 3)+theme_bw()
test %>% ggplot(aes(x = ema_mkl_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, color = as.factor(ema_mkl_miss_hit)))+geom_point(alpha = 0.3, size = 3)+theme_bw(base_size = 16)
test %>% ggplot(aes(x = ema_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, color = as.factor(ema_miss_hit)))+geom_point(alpha = 0.3, size = 3)+theme_bw(base_size = 16)
test %>% ggplot(aes(x = ema_log_mean_continuous_prediction, y = ema_interview_log_mean_continuous_prediction, color = as.factor(ema_log_miss_hit)))+geom_point(alpha = 0.3, size = 3)+theme_bw(base_size = 16)
5422-3657
1765/5422
cca_dwi_rop_chr_cv <- read.csv('~/Documents/Harvard/projects/DTI_Pronia/real_psychosis_dwi_disorder_risk/data/in_between_data/cca_dwi_pronia.csv')
cca_vars_rop_chr_cv <- read.csv('~/Documents/Harvard/projects/DTI_Pronia/real_psychosis_dwi_disorder_risk/data/in_between_data/cca_vars_pronia_NA.csv')
# load standard packages
library(tidyverse)
library(CCA)
library(caret)
library(dplyr)
library(clue)
setwd('~/Documents/Harvard/projects/DTI_Pronia/psychosis_dwi_disorder_risk/')
# load functions. check that your working directory (getwd()) is your github
# repository.
source('cv_function/center_cv_function.R')
source('cv_function/impute_cv_function.R')
source('cv_function/align_and_singflip_function.R')
source('cv_function/create_cv_folds_function.R')
source('cv_function/run_cca_cv_function.R')
source('center_function.R')
source('cca_function.R')
source('permute_cca_function.R')
# Subset the DWI (diffusion-weighted imaging) measure by arranging and processing the dataset
df2shuffle <- cca_vars_rop_chr_cv %>%
column_to_rownames('PSN')%>%
arrange(studygroup_num)
# Create an ordered dataframe for studygroup labels and PSN
df2order <- cca_vars_rop_chr_cv %>%
arrange(studygroup_num)%>%
dplyr::select(PSN, studygroup_num)
# Merge the DWI dataset with the group labels and arrange the data accordingly
dwi2shuffle <- cca_dwi_rop_chr_cv %>%
left_join(., df2order, by = 'PSN')%>%
arrange(studygroup_num)%>%
dplyr::select(-studygroup_num)%>%
column_to_rownames('PSN')
# Set the number of folds and repetitions for cross-validation
n_folds <- 10
n_repeats <- 5
# Initialize an empty list to store cross-validation results
cv_splits <- list()
# Set seed for reproducibility to ensure the same splits each time
set.seed(123)  # Set a seed for reproducibility
# Prepare the data for CCA (Canonical Correlation Analysis)
vars_original <- df2shuffle %>%
as.matrix(.) # Original cohort predictors
vars_imputed <- df2shuffle %>%
mutate(across(everything(), ~ as.numeric(.)))%>%
group_by(studygroup_num)%>%
mutate(across(-(c(uhr_1stdegree_re)),
~ case_when(is.na(.) ~ mean(., na.rm = TRUE),
TRUE ~ .)),
uhr_1stdegree_re =
case_when(is.na(uhr_1stdegree_re) ~
median(uhr_1stdegree_re, na.rm = TRUE),
TRUE ~ uhr_1stdegree_re))%>%
ungroup()%>%
as.matrix(.) # Original cohort predictors
dwi_original <- dwi2shuffle  %>%
as.matrix(.)# Original cohort outcomes
# Step 1: Run full-sample CCA on unshuffled data
# Create fixed folds outside for consistency across permutations
# Build fixed folds once
folds_list <- create_cv_folds(nrow(dwi_original),
n_folds   = n_folds,
n_repeats = n_repeats,
seed      = 123)
# Reference CCA (unshuffled). This CCA is run to test alignment and sign flip
# in the CV
overall_cca <- permcca_winkler(vars_imputed, dwi_original, 1, TRUE)
ref_X <- overall_cca$cwl
ref_Y <- overall_cca$cwr
overall_cca
vars_original
dwi_original
